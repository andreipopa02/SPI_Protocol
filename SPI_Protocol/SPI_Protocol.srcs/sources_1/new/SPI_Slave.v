module SPI_Slave(
      input sclk,                 // clock signal(it is generated by the master)
      input mosi,                 // input data from master
      output miso,                // output data sent to master
      input cs,                   // signal from master that starts data transmission
    
      input reset,                // reset
      input pl,                   // paralel load
      
      input [7:0] data_in,         // used to add initial values on shift register
      output [7:0] data_out        // used for debug
    );
    
    wire [3:0] out_cnt; //output from counter
    wire enable;
    
    counter cnt_s(
        .clk(sclk),                    //input
        .reset(reset),                 //input
        .enable(enable),               //input
        .out_cnt(out_cnt)              //output
   );
    
    shift_register_slave shift_s(
        .clk(sclk),                     //input
        .reset(reset),                  //input
        .enable(enable),                //input
        .mosi(mosi),                    //input
        .pl(pl),                        //input
        .data_in(data_in),              //input
        .miso(miso),                    //output
        .data_out(data_out)             //output
    );
    
    
     fsm_slave fsm_s(
        .clk(sclk),                     //input
        .reset(reset),                  //input
        .cs(cs),                        //input
        .bit_cnt(out_cnt),              //input
        .enable(enable)                 //output
    );
   
endmodule